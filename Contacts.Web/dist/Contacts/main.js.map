{"version":3,"sources":["./src/app/components/entry-item/entry-item.component.ts","./src/app/components/entry-item/entry-item.component.html","./src/app/modules/core/core.module.ts","./src/app/modules/material/material.module.ts","./src/app/components/layout/layout.component.html","./src/app/components/layout/layout.component.ts","./src/environments/environment.ts","./src/app/components/entry-form/entry-form.component.html","./src/app/components/entry-form/entry-form.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/contacts.service.ts","./src/app/modules/routing/routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { Entry } from 'src/app/classes/entry';\n\n@Component({\n  selector: 'app-entry-item',\n  templateUrl: './entry-item.component.html',\n  styleUrls: ['./entry-item.component.css']\n})\nexport class EntryItemComponent implements OnInit {\n  @Input() entry: Entry = {\n    name: '',\n    id: '',\n    phoneNumber: '',\n    phonebookId: ''\n  };\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n    <div class=\"entry-item\"><mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\">person</mat-icon> {{entry.name}}</div>\n    <mat-divider></mat-divider>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LayoutComponent } from 'src/app/components/layout/layout.component';\nimport { MaterialModule } from '../material/material.module';\nimport { EntryItemComponent } from 'src/app/components/entry-item/entry-item.component';\nimport { EntryFormComponent } from 'src/app/components/entry-form/entry-form.component';\nimport { AppRoutingModule } from '../routing/routing.module';\nimport { FormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [LayoutComponent, EntryItemComponent, EntryFormComponent],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    AppRoutingModule,\n    FormsModule,\n  ],\n  exports: [LayoutComponent, EntryItemComponent, EntryFormComponent]\n})\nexport class CoreModule { }\n","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {OverlayModule} from '@angular/cdk/overlay';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    OverlayModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class MaterialModule {}","<mat-sidenav-container class=\"example-container\">\n    <mat-sidenav mode=\"side\" opened>\n        <div (click)=\"addEntry()\" class=\"entry-item\"><mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\">add</mat-icon> Add Entry</div>\n        <mat-divider></mat-divider>\n        <input type=\"text\" (change)=\"onChangeEvent($event)\" />\n        <mat-divider></mat-divider>\n        <div *ngFor=\"let entry of entries\">\n            <app-entry-item [entry]=\"entry\" [routerLink]=\"['/entry', entry.id]\">></app-entry-item>\n        </div>\n    </mat-sidenav>\n    <mat-sidenav-content>\n        <div class=\"entry-form\">\n            <router-outlet></router-outlet>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Entry } from 'src/app/classes/entry';\nimport { ContactsService } from 'src/app/services/contacts.service';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent implements OnInit {\n\n  entries: Entry[] = [];\n  constructor(private contactsService: ContactsService, private router: Router) {\n    \n   }\n\n  ngOnInit(): void {\n    this.router.events.subscribe(\n          () => this.getEntries()\n      );\n  }\n\n  getEntries() {\n    this.contactsService.getEntries().subscribe(\n      data => { this.entries = data; },\n      err => {},\n      () => {}\n    );\n  }\n\n  addEntry() {\n    this.router.navigate(['/entry'])\n  }\n\n  onSearchChange(searchValue: string): void {  \n    console.log(searchValue);\n  }\n  onChangeEvent(event: any){\n    console.log(event.target.value);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<mat-card class=\"example-card\" *ngIf=\"entry.id == ''\">\n    <mat-card-header>\n      <div mat-card-avatar class=\"example-header-image\"></div>\n      <mat-card-title>New Entry</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n        <form class=\"example-form\">\n            <mat-grid-list cols=\"1\" rowHeight=\"100px\">\n                <mat-grid-tile>\n                    <mat-form-field class=\"example-full-width\">\n                        <mat-label>First Name</mat-label>\n                        <input name=\"entryName\" [(ngModel)]=\"entry.name\" matInput value=\"{{entry.name}}\" placeholder=\"First name\">\n                      </mat-form-field>\n                </mat-grid-tile>\n                \n                <mat-grid-tile>\n                    <mat-form-field class=\"example-full-width\">\n                        <mat-label>Cellphone no.</mat-label>\n                        <input name=\"phoneNumber\" matInput placeholder=\"Phone no.\" value=\"{{entry.phoneNumber}}\">\n                    </mat-form-field>\n                </mat-grid-tile>\n            </mat-grid-list>\n          </form>\n    </mat-card-content>\n    <mat-card-actions>\n      <button (click)=\"save()\" mat-button>SAVE</button>\n      <button mat-button (click)=\"cancel()\">CANCEL</button>\n    </mat-card-actions>\n  </mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Entry } from 'src/app/classes/entry';\nimport { ContactsService } from 'src/app/services/contacts.service';\n\n@Component({\n  selector: 'app-entry-form',\n  templateUrl: './entry-form.component.html',\n  styleUrls: ['./entry-form.component.css']\n})\nexport class EntryFormComponent implements OnInit {\n\n  entry: Entry = {\n    name: '',\n    id: '',\n    phoneNumber: '',\n    phonebookId: ''\n  };\n\n  constructor(private contactsService: ContactsService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n    const routeParams = this.route.snapshot.paramMap;\n    const entryId = routeParams.get('id');\n    if(entryId) {\n      this.getEntry(entryId);\n    }\n    \n  }\n\n  getEntry(entryId: string) {\n    this.contactsService.getEntry(entryId).subscribe(\n      data => { this.entry = data; },\n      err => {},\n      () => {}\n    )\n  }\n\n  save() {\n    this.contactsService.addEntry(this.entry).subscribe(\n      data => {this.router.navigate(['/'])},\n      err => {},\n      () => {}\n    )\n  }\n\n  cancel() {\n    this.entry = {\n      name: '',\n      id: '',\n      phoneNumber: '',\n      phonebookId: ''\n    }\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Contacts';\n}\n","<app-layout></app-layout>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CoreModule } from './modules/core/core.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    CoreModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","  \nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Entry } from '../classes/entry';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactsService {\n\n  constructor(private http: HttpClient) { }\n\n  headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n  getEntries() {\n    let phonebookId = \"00000000-0000-0000-0000-000000000000\";\n    return this.http.get<Entry[]>(\"https://localhost:5001/phonebookentries?\" + phonebookId, {headers: this.headers});\n  }\n\n  addEntry(entry: Entry) {\n\n    entry.id = \"00000000-0000-0000-0000-000000000000\";\n    entry.phonebookId = \"00000000-0000-0000-0000-000000000000\";\n    return this.http.post<string>(\"https://localhost:5001/entry/insert\", entry, {headers: this.headers});\n  }\n\n  getEntry(entryId: string) {\n    return this.http.get<Entry>(\"https://localhost:5001/entry/get/id=?\" + entryId, {headers: this.headers});\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router'; // CLI imports router\nimport { EntryFormComponent } from 'src/app/components/entry-form/entry-form.component';\n\nconst routes: Routes = [\n  { path: 'entry', component: EntryFormComponent },\n  { path: 'entry/:id', component: EntryFormComponent },\n]; // sets up routes constant where you define your routes\n\n// configures NgModule imports and exports\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}